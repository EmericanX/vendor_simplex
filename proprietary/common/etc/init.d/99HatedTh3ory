#!/system/bin/sh
# CMPLX TH3ORY Script Set

LOG_FILE=/data/cmplxth3ory.log

if [ -e $LOG_FILE ]; then
	rm $LOG_FILE;
fi;

# enable sysctl tweaks
#
sysctl -p /system/etc/sysctl.conf

# Start crond
#
echo "root:x:0:0::data/cron:/system/xbin/bash" > /system/etc/passwd
mount -o remount,rw rootfs /
ln -s /system/xbin /xbin
mount -o remount,ro rootfs /
timezone=`date +%z`
if [ $timezone = "-0800" ]; then
TZ=PST8PDT
elif [ $timezone = "-0700" ]; then
TZ=MST7MDT
elif [ $timezone = "-0600" ]; then
TZ=CST6CDT
elif [ $timezone = "-0500" ]; then
TZ=EST5EDT
else TZ=EST5EDT
fi
export TZ
crond -c /data/cron

# Kill Swap
#
echo "0" > /proc/sys/vm/swappiness

#HyperTh3ory
#
rm -f /cache/*.apk
rm -f /cache/*.tmp
rm -f /data/dalvik-cache/*.apk
rm -f /data/dalvik-cache/*.tmp
sysctl -w vm.overcommit_memory=1
sysctl -w vm.page-cluster=3
sysctl -w vm.drop_caches=3


# SD Card Speed Boost
if [ -e /sys/devices/virtual/bdi/179:0/read_ahead_kb ]; then
  echo 2048 > /sys/devices/virtual/bdi/179:0/read_ahead_kb
fi

# Vibration
echo 1550 > /sys/vibe/pwmduty

#Deep Sleep
#
echo "5" > /sys/devices/system/cpu/cpu0/cpufreq/deepsleep_cpulevel
echo "2" > /sys/devices/system/cpu/cpu0/cpufreq/deepsleep_buslevel


#Battery
#
busybox sysctl -w vm.dirty_expire_centisecs=1000
busybox sysctl -w vm.dirty_writeback_centisecs=2000
busybox sysctl -w kernel.random.write_wakeup_threshold=256
busybox sysctl -w kernel.random.read_wakeup_threshold=128


#Core
#
echo "3" > /sys/module/cpuidle/parameters/enable_mask

# Optimize Vm
#
if [ -e /proc/sys/vm/vfs_cache_pressure ]; then
	echo "10" > /proc/sys/vm/vfs_cache_pressure
fi

if [ -e /proc/sys/vm/dirty_expire_centisecs ]; then
	echo "500" > /proc/sys/vm/dirty_expire_centisecs
fi

if [ -e /proc/sys/vm/dirty_writeback_centisecs ]; then
	echo "1000" > /proc/sys/vm/dirty_writeback_centisecs
fi

if [ -e /proc/sys/vm/dirty_ratio ]; then
	echo "90" > /proc/sys/vm/dirty_ratio
fi

if [ -e /proc/sys/vm/dirty_background_ratio ]; then
	echo "45" > /proc/sys/vm/dirty_background_ratio
fi

if [ -f "\$i" ]; then
	sync;
	echo "cfq" > \$i;
fi

 #!/system/bin/sh
#

LOG_FILE=/data/cmplxgov.log

if [ -e $LOG_FILE ]; then
	rm $LOG_FILE;
fi;

# Governor Tweaks
#
#ondemand
echo "70" > /sys/devices/system/cpu/cpufreq/ondemand/up_threshold
echo "40000" > /sys/devices/system/cpu/cpufreq/ondemand/sampling_rate
echo "2" > /sys/devices/system/cpu/cpufreq/ondemand/sampling_down_factor
echo "15" > /sys/devices/system/cpu/cpufreq/ondemand/down_differential

#conservative
echo "60" > /sys/devices/system/cpu/cpufreq/conservative/up_threshold
echo "40000" > /sys/devices/system/cpu/cpufreq/conservative/sampling_rate
echo "5" > /sys/devices/system/cpu/cpufreq/conservative/sampling_down_factor
echo "20" > /sys/devices/system/cpu/cpufreq/conservative/down_threshold
echo "25" > /sys/devices/system/cpu/cpufreq/conservative/freq_step

#interactive
echo "95" > /sys/devices/system/cpu/cpufreq/interactive/go_hispeed_load
echo "1000000" > /sys/devices/system/cpu/cpufreq/interactive/hispeed_freq
echo "10000" > /sys/devices/system/cpu/cpufreq/interactive/min_sample_time
echo "40000" > /sys/devices/system/cpu/cpufreq/interactive/timer_rate

#hotplug
echo "40" > /sys/module/pm_hotplug/parameters/loadl
echo "90" > /sys/module/pm_hotplug/parameters/loadh
echo "50" > /sys/module/pm_hotplug/parameters/loadl_scroff
echo "100" > /sys/module/pm_hotplug/parameters/loadh_scroff
echo "100" > /sys/module/pm_hotplug/parameters/rate
echo "400" > /sys/module/pm_hotplug/parameters/rate_cpuon
echo "400" > /sys/module/pm_hotplug/parameters/rate_scroff
echo "500000" > /sys/module/pm_hotplug/parameters/freq_cpu1on


#Hot Plug Persistent
#
echo "1" > /sys/module/dsscomp/parameters/hotplug_enabled

 #!/system/bin/sh
#

LOG_FILE=/data/cmplxkernel.log

if [ -e $LOG_FILE ]; then
	rm $LOG_FILE;
fi;

# Kernel Tweaks
#
sysctl -w kernel.sched_features=15834233
sysctl -w kernel.panic=0
sysctl -w kernel.panic_on_oops=1
sysctl -w kernel.msgmni=2048
sysctl -w kernel.msgmax=64000
sysctl -w kernel.shmmax=268435500
sysctl -w kernel.sem=500,512000,64,2048
sysctl -w kernel.hung_task_timeout_secs=0
sysctl -w kernel.sched_latency_ns=5000000; #600000
sysctl -w kernel.sched_min_granularity_ns=1000000; #400000
sysctl -w kernel.sched_wakeup_granularity_ns=1000000
sysctl -w kernel.sched_compat_yield=1
sysctl -w kernel.sched_shares_ratelimit=256000
sysctl -w kernel.sched_child_runs_first=0
sysctl -w kernel.threads-max=525810
sysctl -w kernel.multi_threading=2

# disable logger - (comment and reboot for logcat)
# rm /dev/log/main

#I/O
#
echo "0 0 0 1 1 1 2 2" > /sys/devices/system/cpu/cpu0/cpufreq/busfreq_static
echo "enabled" > /sys/devices/system/cpu/cpu0/cpufreq/busfreq_static

#Scaling
#
echo "1" > /sys/devices/system/cpu/sched_mc_power_savings
echo "0" > /sys/devices/system/cpu/cpu0/cpufreq/smooth_target
echo "0" > /sys/devices/system/cpu/cpu0/cpufreq/smooth_offset
echo "0" > /sys/devices/system/cpu/cpu0/cpufreq/smooth_step


 
# imoseyon mods

# file system speedups
busybox mount -o remount,noatime,barrier=0,nobh /system
busybox mount -o remount,noatime /data
busybox mount -o remount,noatime,barrier=0,nobh / 

 #!/system/bin/sh
#

LOG_FILE=/data/cmplxkernel.log

if [ -e $LOG_FILE ]; then
	rm $LOG_FILE;
fi;

# Kernel Tweaks
#
sysctl -w kernel.sched_features=15834233
sysctl -w kernel.panic=0
sysctl -w kernel.panic_on_oops=1
sysctl -w kernel.msgmni=2048
sysctl -w kernel.msgmax=64000
sysctl -w kernel.shmmax=268435500
sysctl -w kernel.sem=500,512000,64,2048
sysctl -w kernel.hung_task_timeout_secs=0
sysctl -w kernel.sched_latency_ns=5000000; #600000
sysctl -w kernel.sched_min_granularity_ns=1000000; #400000
sysctl -w kernel.sched_wakeup_granularity_ns=1000000
sysctl -w kernel.sched_compat_yield=1
sysctl -w kernel.sched_shares_ratelimit=256000
sysctl -w kernel.sched_child_runs_first=0
sysctl -w kernel.threads-max=525810
sysctl -w kernel.multi_threading=2

# disable logger - (comment and reboot for logcat)
# rm /dev/log/main

#I/O
#
echo "0 0 0 1 1 1 2 2" > /sys/devices/system/cpu/cpu0/cpufreq/busfreq_static
echo "enabled" > /sys/devices/system/cpu/cpu0/cpufreq/busfreq_static

#Scaling
#
echo "1" > /sys/devices/system/cpu/sched_mc_power_savings
echo "0" > /sys/devices/system/cpu/cpu0/cpufreq/smooth_target
echo "0" > /sys/devices/system/cpu/cpu0/cpufreq/smooth_offset
echo "0" > /sys/devices/system/cpu/cpu0/cpufreq/smooth_step


 
# mods

# file system speedups
busybox mount -o remount,noatime,barrier=0,nobh /system
busybox mount -o remount,noatime /data
busybox mount -o remount,noatime,barrier=0,nobh /cache
 

 
# DroidTh3ory
# CMPLX zipalign.


LOG_FILE=/data/zipalign.log
ZIPALIGNDB=/data/zipalign.db

if [ -e $LOG_FILE ]; then
	rm $LOG_FILE;
fi;

if [ ! -f $ZIPALIGNDB ]; then
	touch $ZIPALIGNDB;
fi;

echo "Starting FV Automatic ZipAlign $( date +"%m-%d-%Y %H:%M:%S" )" | tee -a $LOG_FILE

for DIR in /system/app /data/app ; do
  cd $DIR
  for APK in *.apk ; do
    if [ $APK -ot $ZIPALIGNDB ] && [ $(grep "$DIR/$APK" $ZIPALIGNDB|wc -l) -gt 0 ] ; then
      echo "Already checked: $DIR/$APK" | tee -a $LOG_FILE
    else
      zipalign -c 4 $APK
      if [ $? -eq 0 ] ; then
        echo "Already aligned: $DIR/$APK" | tee -a $LOG_FILE
        grep "$DIR/$APK" $ZIPALIGNDB > /dev/null || echo $DIR/$APK >> $ZIPALIGNDB
      else
        echo "Now aligning: $DIR/$APK" | tee -a $LOG_FILE
        zipalign -f 4 $APK /cache/$APK
        busybox mount -o rw,remount /system
        cp -f -p /cache/$APK $APK
        busybox rm -f /cache/$APK
        grep "$DIR/$APK" $ZIPALIGNDB > /dev/null || echo $DIR/$APK >> $ZIPALIGNDB
      fi
    fi
  done
done

busybox mount -o ro,remount /system
touch $ZIPALIGNDB
echo "Automatic ZipAlign finished at $( date +"%m-%d-%Y %H:%M:%S" )" | tee -a $LOG_FILE
 

 

